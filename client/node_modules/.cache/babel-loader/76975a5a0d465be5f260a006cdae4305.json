{"ast":null,"code":"var _jsxFileName = \"/Users/tomle/Desktop/Funix/05.Node.js/ASM2/client/src/pages/detail/DetailPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './DetailPage.css';\nimport styles from '../home/Button.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DetailPage = () => {\n  _s();\n\n  //Hotel detail\n  const [result, setResult] = useState([]); //Room avaibility\n\n  const [room, setRoom] = useState([]); //Total price state\n\n  const [totalPrice, setTotalPrice] = useState(0); //Selected room number\n\n  const [roomNumber, setRoomNumber] = useState([]); //Date state\n\n  const [checkInDate, setCheckInDate] = useState();\n  const [checkOutDate, setCheckOutDate] = useState(); //Show hide reserve form\n\n  const [showForm, setShowForm] = useState(false); //Checck all state\n\n  const [uncheckAll, setUncheckAll] = useState(false); //Validate user input\n\n  const [validate, setValidate] = useState(false); //Current day value\n\n  const currentDate = new Date().toISOString().substring(0, 10); //Fetch hotel detail\n\n  const hotelDetail = async () => {\n    try {\n      const id = window.location.pathname;\n      const response = await fetch(`http://localhost:5000${id}`);\n      const data = await response.json();\n\n      if (data.result) {\n        setResult(data.result);\n      } else {\n        console.error(data.message);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    hotelDetail();\n  }, []); //Check room availability when change check in date and check out date\n\n  const roomCheck = async () => {\n    try {\n      if (checkInDate && checkOutDate) {\n        const id = result._id;\n        const response = await fetch(`http://localhost:5000/transaction/${id}?checkin=${checkInDate}&checkout=${checkOutDate}`);\n        const data = await response.json();\n\n        if (data.result) {\n          //Turn result into an array\n          const resultArr = [].concat(...Object.values(data.result)); //Clone result rooms\n\n          let newRoom = result.rooms; //Filter out rooms are empty\n\n          let newRoomNum = newRoom.map(e => {\n            return e.roomNumbers.filter(num => !resultArr.includes(num));\n          }); //Set room numbers into empty rooms\n\n          for (let i = 0; i < newRoomNum.length; i++) {\n            newRoom[i] = { ...newRoom[i],\n              roomNumbers: newRoomNum[i]\n            };\n          }\n\n          setRoom(newRoom);\n        } else {\n          setRoom(result.rooms);\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    roomCheck();\n    uncheckAllHandler();\n  }, [checkInDate, checkOutDate]); //Total price handler\n\n  const totalPriceHandler = (event, price) => {\n    //Calculate total days book\n    const days = Math.floor((new Date(checkOutDate) - new Date(checkInDate)) / (24 * 3600 * 1000)); //Checked room\n\n    if (event.target.checked) {\n      setTotalPrice(prev => prev + price * days);\n      setRoomNumber([...roomNumber, parseInt(event.target.value)]);\n    } //Unchecked room\n\n\n    if (!event.target.checked) {\n      setTotalPrice(prev => prev - price * days);\n      setRoomNumber(roomNumber.filter(e => e !== parseInt(event.target.value)));\n    }\n  }; //Uncheck all room checkboxes\n\n\n  const uncheckAllHandler = () => {\n    setUncheckAll(true);\n    setRoomNumber([]);\n    setTotalPrice(0);\n  }; //Reserve Room\n\n\n  const reserveRoomHandler = async e => {\n    try {\n      e.preventDefault();\n      const reserveRoom = {\n        id: result._id,\n        name: e.target.elements.name.value,\n        email: e.target.elements.email.value,\n        phone: e.target.elements.phone.value,\n        card: e.target.elements.card.value,\n        payment: e.target.elements.payment.value,\n        price: totalPrice,\n        hotel: result,\n        dateStart: e.target.elements.dateStart.value,\n        dateEnd: e.target.elements.dateEnd.value,\n        room: roomNumber\n      }; //Check if user login\n\n      if (!localStorage.getItem('username')) {\n        alert('Please login to reserve room');\n      } else {\n        //Check fields filled\n        for (let key in reserveRoom) {\n          if (!reserveRoom[key]) {\n            alert(`${key.charAt(0).toUpperCase() + key.slice(1)} must be filled`);\n            setValidate(false);\n          } else {\n            setValidate(true);\n          }\n        }\n      }\n\n      if (validate) {\n        const response = await fetch('http://localhost:5000/transaction', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(reserveRoom)\n        });\n        const data = await response.json();\n\n        if (data.result) {\n          console.log(data.result);\n          window.location.href = `/transaction?username=${reserveRoom.email}`;\n        } else {\n          console.error(data.message);\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"name\",\n          children: result.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"address\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-map-marker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), result.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"distance\",\n          children: [\"Excellent location - \", result.distance, \"m from the airport\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"price\",\n          children: \"Book a stay over $350 at this property and get a free airport taxi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailImg\",\n        children: result.photos && result.photos.map((img, index) => {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img,\n            alt: img\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailDescription\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"title\",\n          children: result.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"text\",\n          children: result.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailBook\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"price9Night\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"$\", result.cheapestPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), \" (1 night)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.buttonBlue,\n          onClick: () => setShowForm(!showForm),\n          children: \"Reserve or Book Now!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => reserveRoomHandler(event),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-form_date\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Dates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-date\",\n              type: \"date\",\n              id: \"dateStart\",\n              required: true,\n              pattern: \"\\\\d{4}-\\\\d{2}-\\\\d{2}\",\n              min: currentDate,\n              defaultValue: currentDate,\n              onChange: event => setCheckInDate(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-date\",\n              type: \"date\",\n              id: \"dateEnd\",\n              required: true,\n              pattern: \"\\\\d{4}-\\\\d{2}-\\\\d{2}\",\n              min: checkInDate,\n              defaultValue: currentDate,\n              onChange: event => setCheckOutDate(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-form_info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Reserve Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Your Full Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            placeholder: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Your Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"email\",\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Your Phone Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"phone\",\n            placeholder: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"card\",\n            children: \"Your Card Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"card\",\n            placeholder: \"Card Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"room-title\",\n          children: \"Select Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-form_room\",\n          children: room && room.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-room\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-room_info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: room.title\n              }, room.title, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: room.desc\n              }, room.desc, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"maxPeople\",\n                children: [\"Max People: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: room.maxPeople\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 37\n                }, this)]\n              }, room.maxPeople, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"$\", room.price]\n              }, room.price, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-room_checkbox\",\n              children: room.roomNumbers && room.roomNumbers.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"checkbox-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: num\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: roomNumber.includes(num),\n                  value: num,\n                  id: num,\n                  onChange: event => totalPriceHandler(event, room.price)\n                }, num, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 29\n                }, this)]\n              }, num, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 21\n            }, this)]\n          }, room._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-form_payment\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Total Bill: $\", totalPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"payment\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Cash\",\n            children: \"Cash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Credit Card\",\n            children: \"Credit Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.buttonBlue,\n          children: \"Reserve Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DetailPage, \"hWTmQnGLcVDoF4GQnBwAckJY54o=\");\n\n_c = DetailPage;\nexport default DetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailPage\");","map":{"version":3,"sources":["/Users/tomle/Desktop/Funix/05.Node.js/ASM2/client/src/pages/detail/DetailPage.js"],"names":["React","useEffect","useState","styles","DetailPage","result","setResult","room","setRoom","totalPrice","setTotalPrice","roomNumber","setRoomNumber","checkInDate","setCheckInDate","checkOutDate","setCheckOutDate","showForm","setShowForm","uncheckAll","setUncheckAll","validate","setValidate","currentDate","Date","toISOString","substring","hotelDetail","id","window","location","pathname","response","fetch","data","json","console","error","message","err","roomCheck","_id","resultArr","concat","Object","values","newRoom","rooms","newRoomNum","map","e","roomNumbers","filter","num","includes","i","length","uncheckAllHandler","totalPriceHandler","event","price","days","Math","floor","target","checked","prev","parseInt","value","reserveRoomHandler","preventDefault","reserveRoom","name","elements","email","phone","card","payment","hotel","dateStart","dateEnd","localStorage","getItem","alert","key","charAt","toUpperCase","slice","method","headers","body","JSON","stringify","log","href","address","distance","photos","img","index","title","desc","cheapestPrice","buttonBlue","maxPeople"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './DetailPage.css';\nimport styles from '../home/Button.module.css';\n\nconst DetailPage = () => {\n  //Hotel detail\n  const [result, setResult] = useState([]);\n  //Room avaibility\n  const [room, setRoom] = useState([]);\n  //Total price state\n  const [totalPrice, setTotalPrice] = useState(0);\n  //Selected room number\n  const [roomNumber, setRoomNumber] = useState([]);\n  //Date state\n  const [checkInDate, setCheckInDate] = useState();\n  const [checkOutDate, setCheckOutDate] = useState();\n  //Show hide reserve form\n  const [showForm, setShowForm] = useState(false);\n  //Checck all state\n  const [uncheckAll, setUncheckAll] = useState(false);\n  //Validate user input\n  const [validate, setValidate] = useState(false);\n  //Current day value\n  const currentDate = new Date().toISOString().substring(0, 10);\n\n  //Fetch hotel detail\n  const hotelDetail = async () => {\n    try {\n      const id = window.location.pathname;\n      const response = await fetch(`http://localhost:5000${id}`);\n      const data = await response.json();\n      if (data.result) {\n        setResult(data.result);\n      } else {\n        console.error(data.message);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    hotelDetail();\n  }, []);\n\n  //Check room availability when change check in date and check out date\n  const roomCheck = async () => {\n    try {\n      if (checkInDate && checkOutDate) {\n        const id = result._id;\n        const response = await fetch(\n          `http://localhost:5000/transaction/${id}?checkin=${checkInDate}&checkout=${checkOutDate}`\n        );\n        const data = await response.json();\n        if (data.result) {\n          //Turn result into an array\n          const resultArr = [].concat(...Object.values(data.result));\n          //Clone result rooms\n          let newRoom = result.rooms;\n          //Filter out rooms are empty\n          let newRoomNum = newRoom.map((e) => {\n            return e.roomNumbers.filter((num) => !resultArr.includes(num));\n          });\n          //Set room numbers into empty rooms\n          for (let i = 0; i < newRoomNum.length; i++) {\n            newRoom[i] = { ...newRoom[i], roomNumbers: newRoomNum[i] };\n          }\n          setRoom(newRoom);\n        } else {\n          setRoom(result.rooms);\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    roomCheck();\n    uncheckAllHandler();\n  }, [checkInDate, checkOutDate]);\n\n  //Total price handler\n  const totalPriceHandler = (event, price) => {\n    //Calculate total days book\n    const days = Math.floor(\n      (new Date(checkOutDate) - new Date(checkInDate)) / (24 * 3600 * 1000)\n    );\n    //Checked room\n    if (event.target.checked) {\n      setTotalPrice((prev) => prev + price * days);\n      setRoomNumber([...roomNumber, parseInt(event.target.value)]);\n    }\n    //Unchecked room\n    if (!event.target.checked) {\n      setTotalPrice((prev) => prev - price * days);\n      setRoomNumber(\n        roomNumber.filter((e) => e !== parseInt(event.target.value))\n      );\n    }\n  };\n  //Uncheck all room checkboxes\n  const uncheckAllHandler = () => {\n    setUncheckAll(true);\n    setRoomNumber([]);\n    setTotalPrice(0);\n  };\n  //Reserve Room\n  const reserveRoomHandler = async (e) => {\n    try {\n      e.preventDefault();\n      const reserveRoom = {\n        id: result._id,\n        name: e.target.elements.name.value,\n        email: e.target.elements.email.value,\n        phone: e.target.elements.phone.value,\n        card: e.target.elements.card.value,\n        payment: e.target.elements.payment.value,\n        price: totalPrice,\n        hotel: result,\n        dateStart: e.target.elements.dateStart.value,\n        dateEnd: e.target.elements.dateEnd.value,\n        room: roomNumber,\n      };\n      //Check if user login\n      if (!localStorage.getItem('username')) {\n        alert('Please login to reserve room');\n      } else {\n        //Check fields filled\n        for (let key in reserveRoom) {\n          if (!reserveRoom[key]) {\n            alert(\n              `${key.charAt(0).toUpperCase() + key.slice(1)} must be filled`\n            );\n            setValidate(false);\n          } else {\n            setValidate(true);\n          }\n        }\n      }\n      if (validate) {\n        const response = await fetch('http://localhost:5000/transaction', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(reserveRoom),\n        });\n        const data = await response.json();\n        if (data.result) {\n          console.log(data.result);\n          window.location.href = `/transaction?username=${reserveRoom.email}`;\n        } else {\n          console.error(data.message);\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <div className='detail'>\n        <div className='detailInfo'>\n          <h1 id='name'>{result.name}</h1>\n          <p id='address'>\n            <i className='fa fa-map-marker'></i>\n            {result.address}\n          </p>\n          <h2 id='distance'>\n            Excellent location - {result.distance}m from the airport\n          </h2>\n          <h2 id='price'>\n            Book a stay over $350 at this property and get a free airport taxi\n          </h2>\n        </div>\n        <div className='detailImg'>\n          {result.photos &&\n            result.photos.map((img, index) => {\n              return (\n                <img\n                  src={img}\n                  alt={img}\n                  key={index}\n                />\n              );\n            })}\n        </div>\n        <div className='detailDescription'>\n          <h1 id='title'>{result.title}</h1>\n          <p id='text'>{result.desc}</p>\n        </div>\n        <div className='detailBook'>\n          <p id='price9Night'>\n            <b>${result.cheapestPrice}</b> (1 night)\n          </p>\n          <button\n            className={styles.buttonBlue}\n            onClick={() => setShowForm(!showForm)}\n          >\n            Reserve or Book Now!\n          </button>\n        </div>\n      </div>\n      {showForm && (\n        <form onSubmit={(event) => reserveRoomHandler(event)}>\n          <div className='detail-form'>\n            <div className='detail-form_date'>\n              <h1>Dates</h1>\n              <div id='input'>\n                <input\n                  className='form-date'\n                  type='date'\n                  id='dateStart'\n                  required\n                  pattern='\\d{4}-\\d{2}-\\d{2}'\n                  min={currentDate}\n                  defaultValue={currentDate}\n                  onChange={(event) => setCheckInDate(event.target.value)}\n                ></input>\n                <input\n                  className='form-date'\n                  type='date'\n                  id='dateEnd'\n                  required\n                  pattern='\\d{4}-\\d{2}-\\d{2}'\n                  min={checkInDate}\n                  defaultValue={currentDate}\n                  onChange={(event) => setCheckOutDate(event.target.value)}\n                ></input>\n              </div>\n            </div>\n            <div className='detail-form_info'>\n              <h1>Reserve Info</h1>\n              <label htmlFor='name'>Your Full Name:</label>\n              <input\n                type='text'\n                id='name'\n                placeholder='Full Name'\n              ></input>\n              <label htmlFor='email'>Your Email:</label>\n              <input\n                type='text'\n                id='email'\n                placeholder='Email'\n              ></input>\n              <label htmlFor='phone'>Your Phone Number:</label>\n              <input\n                type='text'\n                id='phone'\n                placeholder='Phone Number'\n              ></input>\n              <label htmlFor='card'>Your Card Number:</label>\n              <input\n                type='text'\n                id='card'\n                placeholder='Card Number'\n              ></input>\n            </div>\n          </div>\n          <>\n            <h1 id='room-title'>Select Rooms</h1>\n            <div className='detail-form_room'>\n              {room &&\n                room.map((room) => (\n                  <div\n                    className='detail-room'\n                    key={room._id}\n                  >\n                    <div className='detail-room_info'>\n                      <h2 key={room.title}>{room.title}</h2>\n                      <p key={room.desc}>{room.desc}</p>\n                      <p\n                        key={room.maxPeople}\n                        id='maxPeople'\n                      >\n                        Max People: <b>{room.maxPeople}</b>\n                      </p>\n                      <h2 key={room.price}>${room.price}</h2>\n                    </div>\n                    <div className='detail-room_checkbox'>\n                      {room.roomNumbers &&\n                        room.roomNumbers.map((num, index) => (\n                          <div\n                            className='checkbox-input'\n                            key={num}\n                          >\n                            <label key={index}>{num}</label>\n                            <input\n                              key={num}\n                              type='checkbox'\n                              checked={roomNumber.includes(num)}\n                              value={num}\n                              id={num}\n                              onChange={(event) =>\n                                totalPriceHandler(event, room.price)\n                              }\n                            ></input>\n                          </div>\n                        ))}\n                    </div>\n                  </div>\n                ))}\n            </div>\n          </>\n          <div className='detail-form_payment'>\n            <h1>Total Bill: ${totalPrice}</h1>\n            <select id='payment'>\n              <option value=''>Select Payment Method</option>\n              <option value='Cash'>Cash</option>\n              <option value='Credit Card'>Credit Card</option>\n            </select>\n            <button\n              type='submit'\n              className={styles.buttonBlue}\n            >\n              Reserve Now\n            </button>\n          </div>\n        </form>\n      )}\n    </>\n  );\n};\n\nexport default DetailPage;\n"]},"metadata":{},"sourceType":"module"}