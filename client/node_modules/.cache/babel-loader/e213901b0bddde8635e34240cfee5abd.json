{"ast":null,"code":"var _jsxFileName = \"/Users/tomle/Desktop/Funix/05.Node.js/ASM2/client/src/pages/user/Transaction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport NavBar from '../home/NavBar';\nimport Form from '../home/Form';\nimport Footer from '../home/Footer';\nimport './Transaction.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Transaction = () => {\n  _s();\n\n  //Transaction state\n  const [transaction, setTransaction] = useState(); //User email\n\n  const username = JSON.parse(localStorage.getItem('username')); //Fetch transactions\n\n  const transactionsFetch = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/transaction?username=${username}`);\n      const data = await response.json();\n\n      if (data.result) {\n        setTransaction(data.result);\n      } else {\n        console.error(data.message);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    transactionsFetch();\n  }, []); //Change date format\n\n  const formatDate = date => {\n    return new Date(date).toLocaleDateString('en-UK', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hotel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: transaction && transaction.map((trans, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: (index + 1).toString().padStart(2, '0')\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: trans.hotel.name\n            }, trans.hotel.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: trans.room.toString()\n            }, trans.room, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: `${formatDate(trans.dateStart)} -\n                    ${formatDate(trans.dateEnd)}`\n            }, trans.date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", trans.price]\n            }, trans.price, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: trans.payment\n            }, trans.payment, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: trans.status === 'Booked' ? 'status-booked' : trans.status === 'Checkin' ? 'status-checkin' : 'status-checkout',\n                children: trans.status\n              }, trans.status, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)]\n          }, trans._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Transaction, \"N5gD3teZ/HMdeHehTg2S7sK4/nM=\");\n\n_c = Transaction;\nexport default Transaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transaction\");","map":{"version":3,"sources":["/Users/tomle/Desktop/Funix/05.Node.js/ASM2/client/src/pages/user/Transaction.js"],"names":["React","useEffect","useState","NavBar","Form","Footer","Transaction","transaction","setTransaction","username","JSON","parse","localStorage","getItem","transactionsFetch","response","fetch","data","json","result","console","error","message","err","formatDate","date","Date","toLocaleDateString","year","month","day","map","trans","index","toString","padStart","hotel","name","room","dateStart","dateEnd","price","payment","status","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport NavBar from '../home/NavBar';\nimport Form from '../home/Form';\nimport Footer from '../home/Footer';\nimport './Transaction.css';\n\nconst Transaction = () => {\n  //Transaction state\n  const [transaction, setTransaction] = useState();\n  //User email\n  const username = JSON.parse(localStorage.getItem('username'));\n  //Fetch transactions\n  const transactionsFetch = async () => {\n    try {\n      const response = await fetch(\n        `http://localhost:5000/transaction?username=${username}`\n      );\n      const data = await response.json();\n      if (data.result) {\n        setTransaction(data.result);\n      } else {\n        console.error(data.message);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    transactionsFetch();\n  }, []);\n  //Change date format\n  const formatDate = (date) => {\n    return new Date(date).toLocaleDateString('en-UK', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n    });\n  };\n  return (\n    <>\n      <NavBar />\n      <div className='transaction'>\n        <h1>Your Transaction</h1>\n        <table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Hotel</th>\n              <th>Room</th>\n              <th>Date</th>\n              <th>Price</th>\n              <th>Payment Method</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {transaction &&\n              transaction.map((trans, index) => (\n                <tr key={trans._id}>\n                  <td key={index}>{(index + 1).toString().padStart(2, '0')}</td>\n                  <td key={trans.hotel.name}>{trans.hotel.name}</td>\n                  <td key={trans.room}>{trans.room.toString()}</td>\n                  <td key={trans.date}>\n                    {`${formatDate(trans.dateStart)} -\n                    ${formatDate(trans.dateEnd)}`}\n                  </td>\n                  <td key={trans.price}>${trans.price}</td>\n                  <td key={trans.payment}>{trans.payment}</td>\n                  <td>\n                    <button\n                      key={trans.status}\n                      className={\n                        trans.status === 'Booked'\n                          ? 'status-booked'\n                          : trans.status === 'Checkin'\n                          ? 'status-checkin'\n                          : 'status-checkout'\n                      }\n                    >\n                      {trans.status}\n                    </button>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </div>\n      <Form />\n      <Footer />\n    </>\n  );\n};\n\nexport default Transaction;\n"]},"metadata":{},"sourceType":"module"}